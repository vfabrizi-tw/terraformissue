Apply complete! Resources: 25 added, 0 changed, 0 destroyed.

The state of your infrastructure has been saved to the path
below. This state is required to modify and destroy your
infrastructure, so keep it safe. To inspect the complete state
use the `terraform show` command.

State path: terraform.tfstate

Experimental feature failure! Please report a bug.

This is not an error. Your Terraform operation completed successfully.
Your real infrastructure is unaffected by this message.

While running, Terraform sometimes tests experimental features in the
background. These features cannot affect real state and never touch
real infrastructure. If the features work properly, you see nothing.
If the features fail, this message appears.

The following failures happened while running experimental features.
Please report a Terraform bug so that future Terraform versions that
enable these features can be improved!

You can report an issue at: https://github.com/hashicorp/terraform/issues

18 error(s) occurred:

* apply operation: Unknown 'ValidateResource' shadow value: &errors.errorString{s:"shadow closed"}
* apply operation: Diff "module.stack_ext_ssl.aws_iam_role_policy.policy" had unequal states (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"policy":"${var.iam_role_policy}", "name":"pol-${var.project_name}-${var.environment}", "role":"${aws_iam_role.role.id}"}, Config:map[string]interface {}{"policy":"{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n                 \"ec2:AssociateAddress\",\n                 \"ec2:DescribeAddresses\",\n                 \"ec2:AllocateAddress\",\n                 \"ec2:EIPAssociation\",\n                 \"ec2:DisassociateAddress\"\n                ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n", "name":"pol-pyramid-dev", "role":"terraform-201611070947003997736826ge"}, raw:(*config.RawConfig)(0xc4208abb60)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"name":"pol-${var.project_name}-${var.environment}", "role":"${aws_iam_role.role.id}", "policy":"${var.iam_role_policy}"}, Config:map[string]interface {}{"name":"pol-pyramid-dev", "role":"terraform-201611070947003997736826ge", "policy":"{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\"*\"],\n      \"Effect\": \"Deny\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n\n"}, raw:(*config.RawConfig)(0xc420806060)}
* apply operation: Unknown 'ValidateResource' shadow value: &errors.errorString{s:"shadow closed"}
* apply operation: Diff "module.stack_ext_ssl.aws_security_group.sg_i-stack" had unequal states (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"tags":[]map[string]interface {}{map[string]interface {}{"Name":"sg-i-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}"}, map[string]interface {}{"Id":"sg-i-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}"}, map[string]interface {}{"Service":"${var.service_name}"}, map[string]interface {}{"Project":"${var.project_name}"}, map[string]interface {}{"Environment":"${var.environment}"}, map[string]interface {}{"Uuid":"${var.uuid}"}}, "name":"sg_i-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "vpc_id":"${var.vpcID}"}, Config:map[string]interface {}{"name":"sg_i-cogsrv-pyramid-dev-29612", "vpc_id":"vpc-03c7b267", "tags":[]map[string]interface {}{map[string]interface {}{"Name":"sg-i-pyramid-pyramid-dev-29612"}, map[string]interface {}{"Id":"sg-i-pyramid-pyramid-dev-29612"}, map[string]interface {}{"Service":"cogsrv"}, map[string]interface {}{"Project":"pyramid"}, map[string]interface {}{"Environment":"dev"}, map[string]interface {}{"Uuid":"29612"}}}, raw:(*config.RawConfig)(0xc420a5eb40)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"name":"sg_i-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "vpc_id":"${var.vpcID}", "tags":[]map[string]interface {}{map[string]interface {}{"Name":"sg-i-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}"}, map[string]interface {}{"Id":"sg-i-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}"}, map[string]interface {}{"Service":"${var.service_name}"}, map[string]interface {}{"Project":"${var.project_name}"}, map[string]interface {}{"Environment":"${var.environment}"}, map[string]interface {}{"Uuid":"${var.uuid}"}}}, Config:map[string]interface {}{"name":"sg_i-cogsrv-pyramid-dev-29612", "vpc_id":"", "tags":[]map[string]interface {}{map[string]interface {}{"Name":"sg-i-pyramid-pyramid-dev-29612"}, map[string]interface {}{"Id":"sg-i-pyramid-pyramid-dev-29612"}, map[string]interface {}{"Service":"cogsrv"}, map[string]interface {}{"Project":"pyramid"}, map[string]interface {}{"Environment":"dev"}, map[string]interface {}{"Uuid":"29612"}}}, raw:(*config.RawConfig)(0xc420b98180)}
* apply operation: Unknown 'ValidateResource' shadow value: &errors.errorString{s:"shadow closed"}
* apply operation: Diff "module.stack_ext_ssl.aws_security_group.sg_elb-stack" had unequal states (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"name":"sg_elb-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "vpc_id":"${var.vpcID}", "tags":[]map[string]interface {}{map[string]interface {}{"Name":"sg-i-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}"}, map[string]interface {}{"Id":"sg-elb-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}"}, map[string]interface {}{"Service":"${var.service_name}"}, map[string]interface {}{"Project":"${var.project_name}"}, map[string]interface {}{"Environment":"${var.environment}"}, map[string]interface {}{"Uuid":"${var.uuid}"}}}, Config:map[string]interface {}{"tags":[]map[string]interface {}{map[string]interface {}{"Name":"sg-i-pyramid-pyramid-dev-29612"}, map[string]interface {}{"Id":"sg-elb-pyramid-pyramid-dev-29612"}, map[string]interface {}{"Service":"cogsrv"}, map[string]interface {}{"Project":"pyramid"}, map[string]interface {}{"Environment":"dev"}, map[string]interface {}{"Uuid":"29612"}}, "name":"sg_elb-cogsrv-pyramid-dev-29612", "vpc_id":"vpc-03c7b267"}, raw:(*config.RawConfig)(0xc4207c6d20)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"tags":[]map[string]interface {}{map[string]interface {}{"Name":"sg-i-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}"}, map[string]interface {}{"Id":"sg-elb-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}"}, map[string]interface {}{"Service":"${var.service_name}"}, map[string]interface {}{"Project":"${var.project_name}"}, map[string]interface {}{"Environment":"${var.environment}"}, map[string]interface {}{"Uuid":"${var.uuid}"}}, "name":"sg_elb-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "vpc_id":"${var.vpcID}"}, Config:map[string]interface {}{"name":"sg_elb-cogsrv-pyramid-dev-29612", "vpc_id":"", "tags":[]map[string]interface {}{map[string]interface {}{"Name":"sg-i-pyramid-pyramid-dev-29612"}, map[string]interface {}{"Id":"sg-elb-pyramid-pyramid-dev-29612"}, map[string]interface {}{"Service":"cogsrv"}, map[string]interface {}{"Project":"pyramid"}, map[string]interface {}{"Environment":"dev"}, map[string]interface {}{"Uuid":"29612"}}}, raw:(*config.RawConfig)(0xc4208c42a0)}
* apply operation: Unknown 'ValidateResource' shadow value: &errors.errorString{s:"shadow closed"}
* apply operation: Diff "module.stack_ext_ssl.aws_security_group_rule.sg_i-ingress.1" had unequal states (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"security_group_id":"${aws_security_group.sg_i-stack.id}", "type":"ingress", "from_port":"${var.i_sg_ports[count.index]}", "to_port":"${var.i_sg_ports[count.index]}", "protocol":"tcp", "cidr_blocks":[]interface {}{"${var.vpcCIDR}"}}, Config:map[string]interface {}{"cidr_blocks":[]interface {}{"10.0.0.0/16"}, "security_group_id":"sg-8710b7e1", "type":"ingress", "from_port":"80", "to_port":"80", "protocol":"tcp"}, raw:(*config.RawConfig)(0xc420a5e960)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"type":"ingress", "from_port":"${var.i_sg_ports[count.index]}", "to_port":"${var.i_sg_ports[count.index]}", "protocol":"tcp", "cidr_blocks":[]interface {}{"${var.vpcCIDR}"}, "security_group_id":"${aws_security_group.sg_i-stack.id}"}, Config:map[string]interface {}{"from_port":"80", "to_port":"80", "protocol":"tcp", "cidr_blocks":[]interface {}{""}, "security_group_id":"sg-8710b7e1", "type":"ingress"}, raw:(*config.RawConfig)(0xc420cffb00)}
* apply operation: Unknown 'ValidateResource' shadow value: &errors.errorString{s:"shadow closed"}
* apply operation: Diff "module.stack_ext_ssl.aws_launch_configuration.lc-stack" had unequal states (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"security_groups":[]interface {}{"${aws_security_group.sg_i-stack.id}"}, "user_data":"${var.user_data}", "iam_instance_profile":"${aws_iam_instance_profile.stack-profile.name}", "key_name":"${var.key_name}", "enable_monitoring":"${var.detailed_monitoring}", "image_id":"${var.aws_ami[var.aws_region]}", "instance_type":"${var.instance_type}"}, Config:map[string]interface {}{"instance_type":"t2.small", "security_groups":[]interface {}{"sg-8710b7e1"}, "user_data":"#!/bin/bash -e\n\nBOOTSTRAP_SCRIPT=\"cogentserver-bootstrap.tgz\"\nBUCKET=\"s3://pyramid-aws-dev/dev/infra\"\n\n\nBOOTSTRAP_URL=\"$BUCKET/$BOOTSTRAP_SCRIPT\"\n\n#temporary stuff\napt-get update; apt-get install nginx -y; service nginx start\n\n\n#we need to install the aws cli client\napt-get update -y; apt-get install unzip -y\nwget \"https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\" -O /root/awscli-bundle.zip\nunzip /root/awscli-bundle.zip -d /root\n/root/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws\n\n#fetching the bootstrap file\naws s3 cp \"$BOOTSTRAP_URL\" /root/bootstrap.tgz\ntar xvzf /root/bootstrap.tgz -C /root/\nchmod +x /root/bootstrap/bootstrap.sh\n/root/bootstrap/bootstrap.sh\n", "iam_instance_profile":"terraform-20161107094700817899709u77", "key_name":"vincenzofabrizi_key_tw", "enable_monitoring":"true", "image_id":"ami-f95ef58a"}, raw:(*config.RawConfig)(0xc420807860)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"key_name":"${var.key_name}", "enable_monitoring":"${var.detailed_monitoring}", "image_id":"${var.aws_ami[var.aws_region]}", "instance_type":"${var.instance_type}", "security_groups":[]interface {}{"${aws_security_group.sg_i-stack.id}"}, "user_data":"${var.user_data}", "iam_instance_profile":"${aws_iam_instance_profile.stack-profile.name}"}, Config:map[string]interface {}{"image_id":"ami-f95ef58a", "instance_type":"t2.small", "security_groups":[]interface {}{"sg-8710b7e1"}, "user_data":"", "iam_instance_profile":"terraform-20161107094700817899709u77", "key_name":"vincenzofabrizi_key_tw", "enable_monitoring":"true"}, raw:(*config.RawConfig)(0xc420a46d80)}
* apply operation: Unknown 'ValidateResource' shadow value: &errors.errorString{s:"shadow closed"}
* apply operation: Diff "module.stack_ext_ssl.aws_security_group_rule.sg_i-ingress.0" had unequal states (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"cidr_blocks":[]interface {}{"${var.vpcCIDR}"}, "security_group_id":"${aws_security_group.sg_i-stack.id}", "type":"ingress", "from_port":"${var.i_sg_ports[count.index]}", "to_port":"${var.i_sg_ports[count.index]}", "protocol":"tcp"}, Config:map[string]interface {}{"type":"ingress", "from_port":"22", "to_port":"22", "protocol":"tcp", "cidr_blocks":[]interface {}{"10.0.0.0/16"}, "security_group_id":"sg-8710b7e1"}, raw:(*config.RawConfig)(0xc420b1e2a0)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"security_group_id":"${aws_security_group.sg_i-stack.id}", "type":"ingress", "from_port":"${var.i_sg_ports[count.index]}", "to_port":"${var.i_sg_ports[count.index]}", "protocol":"tcp", "cidr_blocks":[]interface {}{"${var.vpcCIDR}"}}, Config:map[string]interface {}{"cidr_blocks":[]interface {}{""}, "security_group_id":"sg-8710b7e1", "type":"ingress", "from_port":"22", "to_port":"22", "protocol":"tcp"}, raw:(*config.RawConfig)(0xc420a475c0)}
* apply operation: Unknown 'ValidateResource' shadow value: &errors.errorString{s:"shadow closed"}
* apply operation: Diff "module.stack_ext_ssl.aws_security_group_rule.sg_i-ingress.2" had unequal states (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"security_group_id":"${aws_security_group.sg_i-stack.id}", "type":"ingress", "from_port":"${var.i_sg_ports[count.index]}", "to_port":"${var.i_sg_ports[count.index]}", "protocol":"tcp", "cidr_blocks":[]interface {}{"${var.vpcCIDR}"}}, Config:map[string]interface {}{"protocol":"tcp", "cidr_blocks":[]interface {}{"10.0.0.0/16"}, "security_group_id":"sg-8710b7e1", "type":"ingress", "from_port":"8081", "to_port":"8081"}, raw:(*config.RawConfig)(0xc420b78660)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"type":"ingress", "from_port":"${var.i_sg_ports[count.index]}", "to_port":"${var.i_sg_ports[count.index]}", "protocol":"tcp", "cidr_blocks":[]interface {}{"${var.vpcCIDR}"}, "security_group_id":"${aws_security_group.sg_i-stack.id}"}, Config:map[string]interface {}{"security_group_id":"sg-8710b7e1", "type":"ingress", "from_port":"8081", "to_port":"8081", "protocol":"tcp", "cidr_blocks":[]interface {}{""}}, raw:(*config.RawConfig)(0xc4208c47e0)}
* apply operation: Unknown 'ValidateResource' shadow value: &errors.errorString{s:"shadow closed"}
* apply operation: Diff "module.stack_ext_ssl.aws_elb.elb-stack" had unequal states (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"internal":"${var.elb_internal}", "listener":[]map[string]interface {}{map[string]interface {}{"instance_protocol":"${var.https_listener_i_proto }", "lb_port":"${var.https_listener_elb_port}", "lb_protocol":"${var.https_listener_elb_proto}", "ssl_certificate_id":"${var.https_cert_arn}", "instance_port":"${var.https_listener_i_port}"}, map[string]interface {}{"instance_port":"${var.http_listener_i_port}", "instance_protocol":"${var.http_listener_i_proto}", "lb_port":"${var.http_listener_elb_port }", "lb_protocol":"${var.http_listener_elb_proto}"}}, "connection_draining_timeout":400, "security_groups":[]interface {}{"${aws_security_group.sg_elb-stack.id}"}, "name":"elb-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "tags":[]map[string]interface {}{map[string]interface {}{"Environment":"${var.environment}", "Uuid":"${var.uuid}", "Id":"elb-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}", "Service":"${var.service_name}", "Project":"${var.project_name}"}}, "subnets":[]interface {}{"${var.sbnPublic}"}, "cross_zone_load_balancing":true, "connection_draining":true, "health_check":[]map[string]interface {}{map[string]interface {}{"timeout":3, "target":"${var.elb_healthcheck_target}", "interval":10, "healthy_threshold":2, "unhealthy_threshold":3}}, "idle_timeout":400}, Config:map[string]interface {}{"connection_draining_timeout":400, "connection_draining":true, "internal":"false", "subnets":[]interface {}{"subnet-c4e1aea0", "subnet-3ad99d4c"}, "tags":[]map[string]interface {}{map[string]interface {}{"Environment":"dev", "Uuid":"29612", "Id":"elb-pyramid-pyramid-dev-29612", "Service":"cogsrv", "Project":"pyramid"}}, "name":"elb-cogsrv-pyramid-dev-29612", "health_check":[]map[string]interface {}{map[string]interface {}{"interval":10, "healthy_threshold":2, "unhealthy_threshold":3, "timeout":3, "target":"HTTP:80/"}}, "security_groups":[]interface {}{"sg-8410b7e2"}, "idle_timeout":400, "cross_zone_load_balancing":true, "listener":[]map[string]interface {}{map[string]interface {}{"ssl_certificate_id":"arn:aws:acm:eu-west-1:826238753827:certificate/317732a2-0e1d-49d0-9108-c758cbe6c2b2", "instance_port":"80", "instance_protocol":"HTTP", "lb_port":"443", "lb_protocol":"HTTPS"}, map[string]interface {}{"lb_port":"80", "lb_protocol":"HTTP", "instance_port":"80", "instance_protocol":"HTTP"}}}, raw:(*config.RawConfig)(0xc420b20000)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"connection_draining_timeout":400, "listener":[]map[string]interface {}{map[string]interface {}{"instance_port":"${var.https_listener_i_port}", "instance_protocol":"${var.https_listener_i_proto }", "lb_port":"${var.https_listener_elb_port}", "lb_protocol":"${var.https_listener_elb_proto}", "ssl_certificate_id":"${var.https_cert_arn}"}, map[string]interface {}{"instance_port":"${var.http_listener_i_port}", "instance_protocol":"${var.http_listener_i_proto}", "lb_port":"${var.http_listener_elb_port }", "lb_protocol":"${var.http_listener_elb_proto}"}}, "connection_draining":true, "tags":[]map[string]interface {}{map[string]interface {}{"Id":"elb-${var.project_name}-${var.project_name}-${var.environment}-${var.uuid}", "Service":"${var.service_name}", "Project":"${var.project_name}", "Environment":"${var.environment}", "Uuid":"${var.uuid}"}}, "idle_timeout":400, "health_check":[]map[string]interface {}{map[string]interface {}{"healthy_threshold":2, "unhealthy_threshold":3, "timeout":3, "target":"${var.elb_healthcheck_target}", "interval":10}}, "cross_zone_load_balancing":true, "name":"elb-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "subnets":[]interface {}{"${var.sbnPublic}"}, "internal":"${var.elb_internal}", "security_groups":[]interface {}{"${aws_security_group.sg_elb-stack.id}"}}, Config:map[string]interface {}{"health_check":[]map[string]interface {}{map[string]interface {}{"timeout":3, "target":"HTTP:80/", "interval":10, "healthy_threshold":2, "unhealthy_threshold":3}}, "connection_draining_timeout":400, "listener":[]map[string]interface {}{map[string]interface {}{"instance_port":"80", "instance_protocol":"HTTP", "lb_port":"443", "lb_protocol":"HTTPS", "ssl_certificate_id":"arn:aws:acm:eu-west-1:826238753827:certificate/317732a2-0e1d-49d0-9108-c758cbe6c2b2"}, map[string]interface {}{"instance_port":"80", "instance_protocol":"HTTP", "lb_port":"80", "lb_protocol":"HTTP"}}, "cross_zone_load_balancing":true, "name":"elb-cogsrv-pyramid-dev-29612", "idle_timeout":400, "security_groups":[]interface {}{"sg-8410b7e2"}, "internal":"false", "connection_draining":true, "subnets":[]interface {}{}, "tags":[]map[string]interface {}{map[string]interface {}{"Id":"elb-pyramid-pyramid-dev-29612", "Service":"cogsrv", "Project":"pyramid", "Environment":"dev", "Uuid":"29612"}}}, raw:(*config.RawConfig)(0xc4208c51a0)}
* apply operation: Unknown 'ValidateResource' shadow value: &errors.errorString{s:"shadow closed"}
* apply operation: Diff "module.stack_ext_ssl.aws_autoscaling_group.asg-stack" had unequal states (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"launch_configuration":"${aws_launch_configuration.lc-stack.name}", "health_check_type":"${var.elb_health_check_type}", "min_size":"${var.asg_min}", "force_delete":true, "name":"asg-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "health_check_grace_period":"${var.elb_health_check_grace_period}", "vpc_zone_identifier":[]interface {}{"${var.sbnPrivate}"}, "load_balancers":[]interface {}{"${aws_elb.elb-stack.name}"}, "max_size":"${var.asg_max}", "enabled_metrics":[]interface {}{"GroupTerminatingInstances", "GroupMaxSize", "GroupDesiredCapacity", "GroupPendingInstances", "GroupInServiceInstances", "GroupMinSize", "GroupTotalInstances", "GroupStandbyInstances"}, "desired_capacity":"${var.asg_desired}", "tag":[]map[string]interface {}{map[string]interface {}{"key":"Name", "value":"i-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Id", "value":"i-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Project", "value":"${var.project_name}", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Service", "value":"${var.service_name}", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Environment", "value":"${var.environment}", "propagate_at_launch":"true"}, map[string]interface {}{"propagate_at_launch":"true", "key":"UUID", "value":"${var.uuid}"}}}, Config:map[string]interface {}{"desired_capacity":"1", "tag":[]map[string]interface {}{map[string]interface {}{"key":"Name", "value":"i-cogsrv-pyramid-dev-29612", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Id", "value":"i-cogsrv-pyramid-dev-29612", "propagate_at_launch":"true"}, map[string]interface {}{"value":"pyramid", "propagate_at_launch":"true", "key":"Project"}, map[string]interface {}{"value":"cogsrv", "propagate_at_launch":"true", "key":"Service"}, map[string]interface {}{"propagate_at_launch":"true", "key":"Environment", "value":"dev"}, map[string]interface {}{"propagate_at_launch":"true", "key":"UUID", "value":"29612"}}, "name":"asg-cogsrv-pyramid-dev-29612", "health_check_grace_period":"300", "max_size":"5", "load_balancers":[]interface {}{"elb-cogsrv-pyramid-dev-29612"}, "launch_configuration":"terraform-2016110709472189360255277b", "force_delete":true, "vpc_zone_identifier":[]interface {}{"subnet-fbe1ae9f", "subnet-3dd99d4b"}, "enabled_metrics":[]interface {}{"GroupTerminatingInstances", "GroupMaxSize", "GroupDesiredCapacity", "GroupPendingInstances", "GroupInServiceInstances", "GroupMinSize", "GroupTotalInstances", "GroupStandbyInstances"}, "health_check_type":"ELB", "min_size":"1"}, raw:(*config.RawConfig)(0xc4208aa720)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"health_check_grace_period":"${var.elb_health_check_grace_period}", "min_size":"${var.asg_min}", "launch_configuration":"${aws_launch_configuration.lc-stack.name}", "load_balancers":[]interface {}{"${aws_elb.elb-stack.name}"}, "tag":[]map[string]interface {}{map[string]interface {}{"key":"Name", "value":"i-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Id", "value":"i-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Project", "value":"${var.project_name}", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Service", "value":"${var.service_name}", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Environment", "value":"${var.environment}", "propagate_at_launch":"true"}, map[string]interface {}{"key":"UUID", "value":"${var.uuid}", "propagate_at_launch":"true"}}, "health_check_type":"${var.elb_health_check_type}", "max_size":"${var.asg_max}", "desired_capacity":"${var.asg_desired}", "name":"asg-${var.service_name}-${var.project_name}-${var.environment}-${var.uuid}", "force_delete":true, "enabled_metrics":[]interface {}{"GroupTerminatingInstances", "GroupMaxSize", "GroupDesiredCapacity", "GroupPendingInstances", "GroupInServiceInstances", "GroupMinSize", "GroupTotalInstances", "GroupStandbyInstances"}, "vpc_zone_identifier":[]interface {}{"${var.sbnPrivate}"}}, Config:map[string]interface {}{"min_size":"1", "health_check_type":"ELB", "tag":[]map[string]interface {}{map[string]interface {}{"value":"i-cogsrv-pyramid-dev-29612", "propagate_at_launch":"true", "key":"Name"}, map[string]interface {}{"key":"Id", "value":"i-cogsrv-pyramid-dev-29612", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Project", "value":"pyramid", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Service", "value":"cogsrv", "propagate_at_launch":"true"}, map[string]interface {}{"key":"Environment", "value":"dev", "propagate_at_launch":"true"}, map[string]interface {}{"key":"UUID", "value":"29612", "propagate_at_launch":"true"}}, "desired_capacity":"1", "health_check_grace_period":"300", "name":"asg-cogsrv-pyramid-dev-29612", "launch_configuration":"terraform-2016110709472189360255277b", "force_delete":true, "enabled_metrics":[]interface {}{"GroupTerminatingInstances", "GroupMaxSize", "GroupDesiredCapacity", "GroupPendingInstances", "GroupInServiceInstances", "GroupMinSize", "GroupTotalInstances", "GroupStandbyInstances"}, "vpc_zone_identifier":[]interface {}{}, "max_size":"5", "load_balancers":[]interface {}{"elb-cogsrv-pyramid-dev-29612"}}, raw:(*config.RawConfig)(0xc4208c4c00)}

This is not an error. Your terraform operation completed successfully
and your real infrastructure is unaffected by this message.
euvfabrizi:stack vfabrizi$ 

